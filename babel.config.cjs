// @ts-check
'use strict';

const { deepMergeConfig } = require('@-xun/symbiote/assets');

const {
  assertEnvironment,
  moduleExport
} = require('@-xun/symbiote/assets/babel.config.cjs');

const { createDebugLogger } = require('rejoinder');

const debug = createDebugLogger({ namespace: 'symbiote:config:babel' });

module.exports = deepMergeConfig(
  moduleExport({
    derivedAliases: getBabelAliases(),
    ...assertEnvironment({ projectRoot: __dirname })
  }),
  {
    // Any custom configs here will be deep merged with moduleExport's result
  }
);

debug('exported config: %O', module.exports);

function getBabelAliases() {
  // ! These aliases are auto-generated by symbiote. Instead of modifying them
  // ! directly, consider regenerating aliases across the entire project with:
  // ! `npx symbiote project renovate --regenerate-assets --assets-preset ...`
  return {
    '^multiverse\\+mongo\\x2dcommon:(.+)$': './packages/mongo-common/src/$1',
    '^multiverse\\+mongo\\x2ditem:(.+)$': './packages/mongo-item/src/$1',
    '^multiverse\\+mongo\\x2dobject\\x2did\\x2dpseudo\\x2dsort:(.+)$':
      './packages/mongo-object-id-pseudo-sort/src/$1',
    '^multiverse\\+mongo\\x2dschema:(.+)$': './packages/mongo-schema/src/$1',
    '^multiverse\\+mongo\\x2dtest:(.+)$': './packages/mongo-test/src/$1',
    '^multiverse\\+mongo\\x2dcommon$': './packages/mongo-common/src/index.js',
    '^multiverse\\+mongo\\x2ditem$': './packages/mongo-item/src/index.js',
    '^multiverse\\+mongo\\x2dobject\\x2did\\x2dpseudo\\x2dsort$':
      './packages/mongo-object-id-pseudo-sort/src/index.js',
    '^multiverse\\+mongo\\x2dschema$': './packages/mongo-schema/src/index.js',
    '^multiverse\\+mongo\\x2dtest$': './packages/mongo-test/src/index.js',
    '^universe\\+mongo\\x2dcommon:(.+)$': './packages/mongo-common/src/$1',
    '^universe\\+mongo\\x2ditem:(.+)$': './packages/mongo-item/src/$1',
    '^universe\\+mongo\\x2dobject\\x2did\\x2dpseudo\\x2dsort:(.+)$':
      './packages/mongo-object-id-pseudo-sort/src/$1',
    '^universe\\+mongo\\x2dschema:(.+)$': './packages/mongo-schema/src/$1',
    '^universe\\+mongo\\x2dtest:(.+)$': './packages/mongo-test/src/$1',
    '^universe\\+mongo\\x2dcommon$': './packages/mongo-common/src/index.js',
    '^universe\\+mongo\\x2ditem$': './packages/mongo-item/src/index.js',
    '^universe\\+mongo\\x2dobject\\x2did\\x2dpseudo\\x2dsort$':
      './packages/mongo-object-id-pseudo-sort/src/index.js',
    '^universe\\+mongo\\x2dschema$': './packages/mongo-schema/src/index.js',
    '^universe\\+mongo\\x2dtest$': './packages/mongo-test/src/index.js',
    '^universe:(.+)$': './src/$1',
    '^universe$': './src/index.js',
    '^testverse\\+mongo\\x2dcommon:(.+)$': './packages/mongo-common/test/$1',
    '^testverse\\+mongo\\x2ditem:(.+)$': './packages/mongo-item/test/$1',
    '^testverse\\+mongo\\x2dobject\\x2did\\x2dpseudo\\x2dsort:(.+)$':
      './packages/mongo-object-id-pseudo-sort/test/$1',
    '^testverse\\+mongo\\x2dschema:(.+)$': './packages/mongo-schema/test/$1',
    '^testverse\\+mongo\\x2dtest:(.+)$': './packages/mongo-test/test/$1',
    '^testverse:(.+)$': './test/$1',
    '^typeverse:(.+)$': './types/$1',
    '^rootverse\\+mongo\\x2dcommon:(.+)$': './packages/mongo-common/$1',
    '^rootverse\\+mongo\\x2ditem:(.+)$': './packages/mongo-item/$1',
    '^rootverse\\+mongo\\x2dobject\\x2did\\x2dpseudo\\x2dsort:(.+)$':
      './packages/mongo-object-id-pseudo-sort/$1',
    '^rootverse\\+mongo\\x2dschema:(.+)$': './packages/mongo-schema/$1',
    '^rootverse\\+mongo\\x2dtest:(.+)$': './packages/mongo-test/$1',
    '^rootverse:(.+)$': './$1'
  };
}
